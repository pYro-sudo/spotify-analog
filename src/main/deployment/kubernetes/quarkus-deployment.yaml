apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-app
  labels:
    app: quarkus-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quarkus-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: quarkus-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "quarkus"
        vault.hashicorp.com/agent-inject-secret-db-creds: "secret/data/quarkus/postgres"
        vault.hashicorp.com/agent-inject-secret-jwt: "secret/data/quarkus/app"
        vault.hashicorp.com/agent-inject-template-db-creds: |
          {{- with secret "secret/data/quarkus/postgres" -}}
          export DB_USERNAME="{{ .Data.data.username }}"
          export DB_PASSWORD="{{ .Data.data.password }}"
          {{- end }}
    spec:
      serviceAccountName: quarkus-app
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["quarkus-app"]
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: quarkus-app
          image: quarkus-app-image:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          envFrom:
            - configMapRef:
                name: app-config
          env:
            - name: QUARKUS_DATASOURCE_DB_KIND
              value: "postgresql"
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DB_USERNAME
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DB_PASSWORD
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: "jdbc:postgresql://postgres:5432/users_db"
            - name: QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION
              value: "update"
            - name: QUARKUS_HIBERNATE_ORM_SQL_LOAD_SCRIPT
              value: "no-file"
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      initContainers:
        - name: vault-agent
          image: vault:latest
          command: ["vault", "agent", "-config=/vault/config/agent-config.hcl"]
          volumeMounts:
            - name: vault-config
              mountPath: /vault/config
          env:
            - name: VAULT_ADDR
              value: "http://vault:8200"
            - name: VAULT_SKIP_VERIFY
              value: "true"
      volumes:
        - name: vault-config
          configMap:
            name: vault-agent-config
        - name: tmp
          emptyDir: {}