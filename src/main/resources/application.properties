# Application
quarkus.application.name=user-service
quarkus.application.version=1.0.0

# HTTP Server
quarkus.http.port=8080
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET, POST, PUT, DELETE, OPTIONS

# Database (PostgreSQL example)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:postgres}
quarkus.datasource.password=${DB_PASSWORD:postgres}
quarkus.datasource.jdbc.url=${DB_URL:jdbc:postgresql://localhost:5432/users_db}
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true

# Hibernate Reactive
quarkus.hibernate-reactive.sql-client-config.event-loop-size=20

# JWT Configuration
mp.jwt.verify.publickey.location=/publicKey.pem
mp.jwt.verify.issuer=${JWT_ISSUER:https://your-issuer.com}
security.jwt.issuer=${JWT_ISSUER:https://your-issuer.com}
security.jwt.required-role=internal

# RabbitMQ Configuration
amqp-host=${RABBITMQ_HOST:localhost}
amqp-port=${RABBITMQ_PORT:5672}
amqp-username=${RABBITMQ_USERNAME:guest}
amqp-password=${RABBITMQ_PASSWORD:guest}

# Incoming channels
mp.messaging.incoming.user-create-in.connector=smallrye-rabbitmq
mp.messaging.incoming.user-create-in.queue.name=user.create.queue
mp.messaging.incoming.user-create-in.exchange.name=user.exchange
mp.messaging.incoming.user-create-in.exchange.type=direct
mp.messaging.incoming.user-create-in.routing-keys=user.create

# Outgoing channels
mp.messaging.outgoing.user-create-out.connector=smallrye-rabbitmq
mp.messaging.outgoing.user-create-out.exchange.name=user.exchange
mp.messaging.outgoing.user-create-out.exchange.type=direct
mp.messaging.outgoing.user-create-out.routing-keys=user.created

# Repeat for other channels following the same pattern

# Metrics
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true

# Cache
quarkus.cache.caffeine.users.expire-after-write=10m
quarkus.cache.caffeine.users-list.expire-after-write=5m
quarkus.cache.caffeine.users-by-gender.expire-after-write=5m
quarkus.cache.caffeine.users-by-age.expire-after-write=5m
quarkus.cache.caffeine.users-by-verification.expire-after-write=5m

# Fault Tolerance
quarkus.fault-tolerance.timeout-unit=SECONDS