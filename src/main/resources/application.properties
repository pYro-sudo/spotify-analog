verticle.instances=10
inbound.prefix=router.proxy
router.prefix=router.backend
inbound.shards=4
shard.map.name=router-proxy-shards
shard.key=shard-
router.instances=4

# Kafka Producer Configuration
# Add to your existing application.properties
mp.messaging.connector.smallrye-kafka.bootstrap.servers=kafka:9092
mp.messaging.outgoing.kafka-in.connector=smallrye-kafka
mp.messaging.outgoing.kafka-in.topic=messages-topic
mp.messaging.outgoing.kafka-in.value.serializer=io.vertx.kafka.client.serialization.JsonObjectSerializer
mp.messaging.outgoing.kafka-in.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Producer Tuning
mp.messaging.outgoing.kafka-in.acks=1
mp.messaging.outgoing.kafka-in.retries=3
mp.messaging.outgoing.kafka-in.delivery.timeout.ms=120000
mp.messaging.outgoing.kafka-in.request.timeout.ms=30000
mp.messaging.outgoing.kafka-in.max.block.ms=60000

# PostgreSQL configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.reactive.url=postgresql://localhost:5432/message_table
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.schema=message_table_front

# Vault Url
quarkus.vault.url=http://localhost:8200

# Vault Authentication
quarkus.vault.authentication.userpass.username=yarik
quarkus.vault.authentication.userpass.password=yarrr_1k

# Path within the kv secret engine where is located the vault-quickstart secret configuration
quarkus.vault.secret-config-kv-path=myapps/vault-quickstart/config
# need to configure that on our own^
jwt.key.refresh.interval=60m

# Security
security.jwt.issuer=www.example.com
security.jwt.required-role=none
mp.jwt.verify.publickey="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt0Slo5cHQL4OS2Gu0lE4\
xAQhfhYGv6NV9snrLGd6aTlrmF2HT081FGpKr+2GEmQJkQvAVgyeAAMNJU0+eE7O\
6sG/zycYAAHOKHjP3GR04SJ1ty3VA8O6r7sPIT7FlRtJBUQMngKWS1xMB5LXCkU+\
VnqvkIrqD3p1R+ltYS/UPWyeoD7F5Uur6HE28pEtU2CeBQ52XY1rEPFcwKFEBQVP\
wZf1ytokIK/OIQbkUkbVADEqWQXmg2+4ostdYt6czhNV9HlEuoTCT5he2oaZ/Wci\
yhbWv6SMJfCj5/VsSnaPzMlf+hBmxDe8n0H26REn5+a1tL0w3TCtQz30MTkaUnxm\
6wIDAQAB"
security.auth.enabled=true
security.auth.require-token=true
auth.token.field=authToken

# Micrometer metrics
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics
quarkus.micrometer.binder.vertx.enabled=true
quarkus.micrometer.binder.kafka.enabled=true
quarkus.micrometer.binder.system.enabled=true
quarkus.micrometer.binder.jvm.enabled=true

# Qute configuration
quarkus.qute.suffixes=html,qute
quarkus.qute.remove-standalone-lines=true